@model IEnumerable<CoreLibraryProj.Book>

@{
    ViewData["Title"] = "Index";
    Layout = null;
}


<head>
    
    <title>Бібліотека</title>
    <link rel="stylesheet" type="text/css" href="/css/BookList.css">
</head>


<body>
<p><a style="display:none;" asp-action="Create">Create New</a></p>


 @{CoreLibraryContext db = new CoreLibraryContext();}

<div class="search_header">

 <!--SEARCH FROM. Contains filters (text input & dropdown lists) -->
    <form method="post" asp-controller="Books" asp-action="Index" style="display:flex;flex-direction:column; width:25%;">
    
    <!--Search text input-->
    <label>Поле пошуку</label>
    <input type="text" placeholder="Введіть назву" name="parameter1" autocomplete="off" value=@ViewBag.SaveValSearch id="parameter1" />

    <div class="dropdown_group">
     <!--DROPDOWN List for Rubrics. Saves chosen item after POST request-->
    <select  name="droppar_rubrics" id="droppar_rubrics">
        <option value="" selected disabled hidden>Обрати категорію</option>
                @{
                    int counter = 1;            
                    foreach (Rubric item in ViewBag.RubricsList)
                    {

                        if (ViewBag.SaveValRub==item.Id.ToString())
                        {
                            @Html.Raw("<option selected value="+@item.Id+">"+@item.RubricName+"</option>");
                        }
                        else @Html.Raw("<option value="+@item.Id+">"+@item.RubricName+"</option>");                      
            counter++;}}
</select>

<select name="droppar_authors" id="droppar_authors">
<option value="" selected disabled hidden>Обрати автора</option>
                    @{
                        int counter_auth = 1;
                        foreach (Author item in ViewBag.AuthorList)
                        {
                            if (ViewBag.SaveValAuth == item.Id.ToString())
                            {
                                @Html.Raw("<option selected value="+@item.Id+">"+@item.AuthorName+"</option>");
                            }
                            else @Html.Raw("<option value="+@item.Id+">"+@item.AuthorName+"</option>");
                            
                            counter_auth++;
                        }
                    }
</select>


 </div>
<input type="submit" value="Застосувати фільтри"/>
 </form>


 <input type="button" value="Скинути фільтри" onclick="RestoreFilters()"/>

 </div>



<div class="results_body"> 
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.BookName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BookDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BookAuthor)
            </th>
           
            <th>
                @Html.DisplayNameFor(model => model.BookRubric)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
       
@foreach (var item in Model) {
        <tr>
            <td style="width:10%;">
                @Html.DisplayFor(modelItem => item.BookName)
            </td>
            <td style="width:60%;">
                @Html.DisplayFor(modelItem => item.BookDescription)
            </td> 
            <td style="width:10%;">  
                @Html.DisplayFor(modelItem => item.BookAuthor.AuthorName)
            </td>
            
            <td style="width:10%;">
                @Html.DisplayFor(modelItem => item.BookRubric.RubricName)
            </td>
            <td>
                <a style="display:none" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a style="display:none" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
            <td>
           
                            @{
                                //Checking whether current book has an avatar. If false - show default image placeholder
                                string image_address_html = "/lib/img/" + item.Id + ".png";
                                string image_address_tocheckexists = Directory.GetCurrentDirectory().ToString()+"\\wwwroot\\lib\\img\\"+item.Id+".png";
                                var exist = File.Exists(image_address_tocheckexists);
                                if (!exist) image_address_html = "/lib/img/notfound.png";
                            }
                            @Html.Raw("<img class='book_image' src="+image_address_html+">")
            </td>
        </tr>
}
    </tbody>
</table>
</div>
<script src="/js/site.js"></script>
 </body>